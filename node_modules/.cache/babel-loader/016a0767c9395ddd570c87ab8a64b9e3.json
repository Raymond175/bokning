{"ast":null,"code":"export const name = \"bookings\";\nexport const bookingsState = {\n  bookings: []\n};\nexport function reducer(state = bookingsState, action) {\n  switch (action.type) {\n    case \"ADD_BOOKING\":\n      return { ...state,\n        bookings: [...state.bookings, action.payload]\n      };\n\n    case \"DELETE_BOOKING\":\n      return { ...state,\n        bookings: state.bookings.filter(booking => booking.username !== action.payload)\n      };\n\n    default:\n      return statne;\n  }\n} // selector\n\nexport function getBookings(state) {\n  return state[name].bookings;\n} // actions\n\nexport function addNewBooking(booking) {\n  return {\n    type: \"ADD_BOOKING\",\n    payload: booking\n  };\n}\nexport function deleteBooking(username) {\n  return {\n    type: \"DELETE_BOOKING\",\n    payload: username\n  };\n}","map":{"version":3,"sources":["/Users/raymondjones/Git/styledrekond/src/ducks/bookings.js"],"names":["name","bookingsState","bookings","reducer","state","action","type","payload","filter","booking","username","statne","getBookings","addNewBooking","deleteBooking"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAG,UAAb;AAEP,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA,QAAQ,EAAE;AADe,CAAtB;AAIP,OAAO,SAASC,OAAT,CAAiBC,KAAK,GAAGH,aAAzB,EAAwCI,MAAxC,EAAgD;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAV,EAAoBG,MAAM,CAACE,OAA3B;AAFP,OAAP;;AAIJ,SAAK,gBAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeM,MAAf,CAAuBC,OAAD,IAAaA,OAAO,CAACC,QAAR,KAAqBL,MAAM,CAACE,OAA/D;AAFP,OAAP;;AAIJ;AACI,aAAOI,MAAP;AAZR;AAcH,C,CAED;;AACA,OAAO,SAASC,WAAT,CAAqBR,KAArB,EAA4B;AAC/B,SAAOA,KAAK,CAACJ,IAAD,CAAL,CAAYE,QAAnB;AACH,C,CAED;;AACA,OAAO,SAASW,aAAT,CAAuBJ,OAAvB,EAAgC;AACnC,SAAO;AACHH,IAAAA,IAAI,EAAE,aADH;AAEHC,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH;AAED,OAAO,SAASK,aAAT,CAAuBJ,QAAvB,EAAiC;AACpC,SAAO;AACHJ,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA,OAAO,EAAEG;AAFN,GAAP;AAIH","sourcesContent":["export const name = \"bookings\";\n\nexport const bookingsState = {\n    bookings: [],\n};\n\nexport function reducer(state = bookingsState, action) {\n    switch (action.type) {\n        case \"ADD_BOOKING\":\n            return {\n                ...state,\n                bookings: [...state.bookings, action.payload],\n            };\n        case \"DELETE_BOOKING\":\n            return {\n                ...state,\n                bookings: state.bookings.filter((booking) => booking.username !== action.payload),\n            };\n        default:\n            return statne;\n    }\n}\n\n// selector\nexport function getBookings(state) {\n    return state[name].bookings;\n}\n\n// actions\nexport function addNewBooking(booking) {\n    return {\n        type: \"ADD_BOOKING\",\n        payload: booking,\n    };\n}\n\nexport function deleteBooking(username) {\n    return {\n        type: \"DELETE_BOOKING\",\n        payload: username,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}