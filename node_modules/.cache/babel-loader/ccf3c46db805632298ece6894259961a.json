{"ast":null,"code":"export const name = \"user\";\nexport const userState = {\n  isLoading: false,\n  userInfo: {\n    username: undefined,\n    password: undefined\n  },\n  userAccounts: []\n};\nexport function reducer(state = userState, action) {\n  switch (action.type) {\n    case \"REQUEST_USER_INFO\":\n      return { ...state,\n        isLoading: true\n      };\n\n    case \"FETCH_USER_INFO_SUCCESS\":\n      return { ...state,\n        isLoading: true,\n        userInfo: action.payload\n      };\n\n    case \"ADD_USER_TO_LIST\":\n      return { ...state,\n        isLoading: true,\n        userAccounts: [...state.userAccounts, action.payload]\n      };\n\n    default:\n      return state;\n  }\n} // selector\n\nexport function getUserAccount(state, username) {\n  return state.userAccounts.find(userAccount => userAccount.username === username);\n}\nexport function checkIfUsernameExists(state, username) {\n  return state.userAccounts.map(userInfo => userInfo.username).includes(username);\n}\nexport function userAccountList(state) {\n  return state.user.userAccounts;\n} // actions\n\nexport function fetchUserInfoAction(userInfo) {\n  return {\n    type: \"FETCH_USER_INFO_SUCCESS\",\n    payload: userInfo\n  };\n}\nexport function registerUserAction(userAccount) {\n  return {\n    type: \"ADD_USER_TO_LIST\",\n    payload: userAccount\n  };\n}","map":{"version":3,"sources":["/Users/raymondjones/Git/styledrekond/src/ducks/user.js"],"names":["name","userState","isLoading","userInfo","username","undefined","password","userAccounts","reducer","state","action","type","payload","getUserAccount","find","userAccount","checkIfUsernameExists","map","includes","userAccountList","user","fetchUserInfoAction","registerUserAction"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAG,MAAb;AAEP,OAAO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,SAAS,EAAE,KADY;AAEvBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAEC,SADF;AAERC,IAAAA,QAAQ,EAAED;AAFF,GAFa;AAMvBE,EAAAA,YAAY,EAAE;AANS,CAAlB;AASP,OAAO,SAASC,OAAT,CAAiBC,KAAK,GAAGR,SAAzB,EAAoCS,MAApC,EAA4C;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELP,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAK,yBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELP,QAAAA,SAAS,EAAE,IAFN;AAGLC,QAAAA,QAAQ,EAAEO,MAAM,CAACE;AAHZ,OAAP;;AAKF,SAAK,kBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELP,QAAAA,SAAS,EAAE,IAFN;AAGLK,QAAAA,YAAY,EAAE,CAAC,GAAGE,KAAK,CAACF,YAAV,EAAwBG,MAAM,CAACE,OAA/B;AAHT,OAAP;;AAKF;AACE,aAAOH,KAAP;AAnBJ;AAqBD,C,CAED;;AACA,OAAO,SAASI,cAAT,CAAwBJ,KAAxB,EAA+BL,QAA/B,EAAyC;AAC9C,SAAOK,KAAK,CAACF,YAAN,CAAmBO,IAAnB,CACJC,WAAD,IAAiBA,WAAW,CAACX,QAAZ,KAAyBA,QADrC,CAAP;AAGD;AAED,OAAO,SAASY,qBAAT,CAA+BP,KAA/B,EAAsCL,QAAtC,EAAgD;AACrD,SAAOK,KAAK,CAACF,YAAN,CACJU,GADI,CACCd,QAAD,IAAcA,QAAQ,CAACC,QADvB,EAEJc,QAFI,CAEKd,QAFL,CAAP;AAGD;AAED,OAAO,SAASe,eAAT,CAAyBV,KAAzB,EAAgC;AACrC,SAAOA,KAAK,CAACW,IAAN,CAAWb,YAAlB;AACD,C,CAED;;AAEA,OAAO,SAASc,mBAAT,CAA6BlB,QAA7B,EAAuC;AAC5C,SAAO;AACLQ,IAAAA,IAAI,EAAE,yBADD;AAELC,IAAAA,OAAO,EAAET;AAFJ,GAAP;AAID;AAED,OAAO,SAASmB,kBAAT,CAA4BP,WAA5B,EAAyC;AAC9C,SAAO;AACLJ,IAAAA,IAAI,EAAE,kBADD;AAELC,IAAAA,OAAO,EAAEG;AAFJ,GAAP;AAID","sourcesContent":["export const name = \"user\";\n\nexport const userState = {\n  isLoading: false,\n  userInfo: {\n    username: undefined,\n    password: undefined,\n  },\n  userAccounts: [],\n};\n\nexport function reducer(state = userState, action) {\n  switch (action.type) {\n    case \"REQUEST_USER_INFO\":\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case \"FETCH_USER_INFO_SUCCESS\":\n      return {\n        ...state,\n        isLoading: true,\n        userInfo: action.payload,\n      };\n    case \"ADD_USER_TO_LIST\":\n      return {\n        ...state,\n        isLoading: true,\n        userAccounts: [...state.userAccounts, action.payload],\n      };\n    default:\n      return state;\n  }\n}\n\n// selector\nexport function getUserAccount(state, username) {\n  return state.userAccounts.find(\n    (userAccount) => userAccount.username === username,\n  );\n}\n\nexport function checkIfUsernameExists(state, username) {\n  return state.userAccounts\n    .map((userInfo) => userInfo.username)\n    .includes(username);\n}\n\nexport function userAccountList(state) {\n  return state.user.userAccounts;\n}\n\n// actions\n\nexport function fetchUserInfoAction(userInfo) {\n  return {\n    type: \"FETCH_USER_INFO_SUCCESS\",\n    payload: userInfo,\n  };\n}\n\nexport function registerUserAction(userAccount) {\n  return {\n    type: \"ADD_USER_TO_LIST\",\n    payload: userAccount,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}