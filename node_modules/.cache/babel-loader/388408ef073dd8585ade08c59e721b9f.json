{"ast":null,"code":"import _toConsumableArray from\"/Users/raymondjones/Git/styledrekond/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/raymondjones/Git/styledrekond/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export var name=\"user\";export var userState={isLoading:false,userInfo:{username:undefined,password:undefined},userAccounts:[]};export function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:userState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"REQUEST_USER_INFO\":return _objectSpread(_objectSpread({},state),{},{isLoading:true});case\"FETCH_USER_INFO_SUCCESS\":return _objectSpread(_objectSpread({},state),{},{isLoading:true,userInfo:action.payload});case\"ADD_USER_TO_LIST\":return _objectSpread(_objectSpread({},state),{},{isLoading:true,userAccounts:[].concat(_toConsumableArray(state.userAccounts),[action.payload])});default:return state;}}// selector\nexport function getUserAccount(state,username){return state.userAccounts.find(function(userAccount){return userAccount.username===username;});}export function checkIfUsernameExists(state,username){return state.userAccounts.map(function(userInfo){return userInfo.username;}).includes(username);}export function userAccountList(state){return state.user.userAccounts;}// actions\nexport function getUserInfoAction(){return{type:\"REQUEST_USER_INFO\"};}export function fetchUserInfoAction(userInfo){return{type:\"FETCH_USER_INFO_SUCCESS\",payload:userInfo};}export function registerUserAction(userAccount){return{type:\"ADD_USER_TO_LIST\",payload:userAccount};}","map":{"version":3,"sources":["/Users/raymondjones/Git/styledrekond/src/ducks/user.js"],"names":["name","userState","isLoading","userInfo","username","undefined","password","userAccounts","reducer","state","action","type","payload","getUserAccount","find","userAccount","checkIfUsernameExists","map","includes","userAccountList","user","getUserInfoAction","fetchUserInfoAction","registerUserAction"],"mappings":"6TAAA,MAAO,IAAMA,CAAAA,IAAI,CAAG,MAAb,CAEP,MAAO,IAAMC,CAAAA,SAAS,CAAG,CACvBC,SAAS,CAAE,KADY,CAEvBC,QAAQ,CAAE,CACRC,QAAQ,CAAEC,SADF,CAERC,QAAQ,CAAED,SAFF,CAFa,CAMvBE,YAAY,CAAE,EANS,CAAlB,CASP,MAAO,SAASC,CAAAA,OAAT,EAA4C,IAA3BC,CAAAA,KAA2B,2DAAnBR,SAAmB,IAARS,CAAAA,MAAQ,2CACjD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,mBAAL,CACE,sCACKF,KADL,MAEEP,SAAS,CAAE,IAFb,GAIF,IAAK,yBAAL,CACE,sCACKO,KADL,MAEEP,SAAS,CAAE,IAFb,CAGEC,QAAQ,CAAEO,MAAM,CAACE,OAHnB,GAKF,IAAK,kBAAL,CACE,sCACKH,KADL,MAEEP,SAAS,CAAE,IAFb,CAGEK,YAAY,8BAAME,KAAK,CAACF,YAAZ,GAA0BG,MAAM,CAACE,OAAjC,EAHd,GAKF,QACE,MAAOH,CAAAA,KAAP,CAnBJ,CAqBD,CAED;AACA,MAAO,SAASI,CAAAA,cAAT,CAAwBJ,KAAxB,CAA+BL,QAA/B,CAAyC,CAC9C,MAAOK,CAAAA,KAAK,CAACF,YAAN,CAAmBO,IAAnB,CACL,SAACC,WAAD,QAAiBA,CAAAA,WAAW,CAACX,QAAZ,GAAyBA,QAA1C,EADK,CAAP,CAGD,CAED,MAAO,SAASY,CAAAA,qBAAT,CAA+BP,KAA/B,CAAsCL,QAAtC,CAAgD,CACrD,MAAOK,CAAAA,KAAK,CAACF,YAAN,CACJU,GADI,CACA,SAACd,QAAD,QAAcA,CAAAA,QAAQ,CAACC,QAAvB,EADA,EAEJc,QAFI,CAEKd,QAFL,CAAP,CAGD,CAED,MAAO,SAASe,CAAAA,eAAT,CAAyBV,KAAzB,CAAgC,CACrC,MAAOA,CAAAA,KAAK,CAACW,IAAN,CAAWb,YAAlB,CACD,CAED;AACA,MAAO,SAASc,CAAAA,iBAAT,EAA6B,CAClC,MAAO,CACLV,IAAI,CAAE,mBADD,CAAP,CAGD,CAED,MAAO,SAASW,CAAAA,mBAAT,CAA6BnB,QAA7B,CAAuC,CAC5C,MAAO,CACLQ,IAAI,CAAE,yBADD,CAELC,OAAO,CAAET,QAFJ,CAAP,CAID,CAED,MAAO,SAASoB,CAAAA,kBAAT,CAA4BR,WAA5B,CAAyC,CAC9C,MAAO,CACLJ,IAAI,CAAE,kBADD,CAELC,OAAO,CAAEG,WAFJ,CAAP,CAID","sourcesContent":["export const name = \"user\";\n\nexport const userState = {\n  isLoading: false,\n  userInfo: {\n    username: undefined,\n    password: undefined,\n  },\n  userAccounts: [],\n};\n\nexport function reducer(state = userState, action) {\n  switch (action.type) {\n    case \"REQUEST_USER_INFO\":\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case \"FETCH_USER_INFO_SUCCESS\":\n      return {\n        ...state,\n        isLoading: true,\n        userInfo: action.payload,\n      };\n    case \"ADD_USER_TO_LIST\":\n      return {\n        ...state,\n        isLoading: true,\n        userAccounts: [...state.userAccounts, action.payload],\n      };\n    default:\n      return state;\n  }\n}\n\n// selector\nexport function getUserAccount(state, username) {\n  return state.userAccounts.find(\n    (userAccount) => userAccount.username === username,\n  );\n}\n\nexport function checkIfUsernameExists(state, username) {\n  return state.userAccounts\n    .map((userInfo) => userInfo.username)\n    .includes(username);\n}\n\nexport function userAccountList(state) {\n  return state.user.userAccounts;\n}\n\n// actions\nexport function getUserInfoAction() {\n  return {\n    type: \"REQUEST_USER_INFO\",\n  };\n}\n\nexport function fetchUserInfoAction(userInfo) {\n  return {\n    type: \"FETCH_USER_INFO_SUCCESS\",\n    payload: userInfo,\n  };\n}\n\nexport function registerUserAction(userAccount) {\n  return {\n    type: \"ADD_USER_TO_LIST\",\n    payload: userAccount,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}