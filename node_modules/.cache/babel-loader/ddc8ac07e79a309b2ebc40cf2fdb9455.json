{"ast":null,"code":"import _objectSpread from\"/Users/raymondjones/Git/styledrekond/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export var name=\"session\";var initialState={isLoggedIn:false,username:undefined};export function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"LOGIN\":return _objectSpread(_objectSpread({},state),{},{isLoggedIn:true,username:action.payload});case\"LOGOUT\":return _objectSpread(_objectSpread({},state),{},{isLoggedIn:false,username:undefined});default:return state;}}export function isLoggedIn(state){return state[name].isLoggedIn;}export function getUsername(state){return state.session.username;}export function loginAction(username){return{type:\"LOGIN\",payload:username};}export function logoutAction(){return{type:\"LOGOUT\"};}","map":{"version":3,"sources":["/Users/raymondjones/Git/styledrekond/src/ducks/session.js"],"names":["name","initialState","isLoggedIn","username","undefined","reducer","state","action","type","payload","getUsername","session","loginAction","logoutAction"],"mappings":"0JAAA,MAAO,IAAMA,CAAAA,IAAI,CAAG,SAAb,CAEP,GAAMC,CAAAA,YAAY,CAAG,CAAEC,UAAU,CAAE,KAAd,CAAqBC,QAAQ,CAAEC,SAA/B,CAArB,CAEA,MAAO,SAASC,CAAAA,OAAT,EAA+C,IAA9BC,CAAAA,KAA8B,2DAAtBL,YAAsB,IAARM,CAAAA,MAAQ,2CACpD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,OAAL,CACE,sCACKF,KADL,MAEEJ,UAAU,CAAE,IAFd,CAGEC,QAAQ,CAAEI,MAAM,CAACE,OAHnB,GAKF,IAAK,QAAL,CACE,sCACKH,KADL,MAEEJ,UAAU,CAAE,KAFd,CAGEC,QAAQ,CAAEC,SAHZ,GAKF,QACE,MAAOE,CAAAA,KAAP,CAdJ,CAgBD,CAED,MAAO,SAASJ,CAAAA,UAAT,CAAoBI,KAApB,CAA2B,CAChC,MAAOA,CAAAA,KAAK,CAACN,IAAD,CAAL,CAAYE,UAAnB,CACD,CACD,MAAO,SAASQ,CAAAA,WAAT,CAAqBJ,KAArB,CAA4B,CACjC,MAAOA,CAAAA,KAAK,CAACK,OAAN,CAAcR,QAArB,CACD,CAED,MAAO,SAASS,CAAAA,WAAT,CAAqBT,QAArB,CAA+B,CACpC,MAAO,CACLK,IAAI,CAAE,OADD,CAELC,OAAO,CAAEN,QAFJ,CAAP,CAID,CAED,MAAO,SAASU,CAAAA,YAAT,EAAwB,CAC7B,MAAO,CACLL,IAAI,CAAE,QADD,CAAP,CAGD","sourcesContent":["export const name = \"session\";\n\nconst initialState = { isLoggedIn: false, username: undefined };\n\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        ...state,\n        isLoggedIn: true,\n        username: action.payload,\n      };\n    case \"LOGOUT\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        username: undefined,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function isLoggedIn(state) {\n  return state[name].isLoggedIn;\n}\nexport function getUsername(state) {\n  return state.session.username;\n}\n\nexport function loginAction(username) {\n  return {\n    type: \"LOGIN\",\n    payload: username,\n  };\n}\n\nexport function logoutAction() {\n  return {\n    type: \"LOGOUT\",\n  };\n}\n"]},"metadata":{},"sourceType":"module"}