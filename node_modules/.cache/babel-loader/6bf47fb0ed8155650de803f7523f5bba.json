{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport localStorageMiddleware from \"../middleware/localStorage\";\nimport * as sessionDuck from \"./session\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport * as userDuck from \"./user\";\nimport * as bookingsDuck from \"./bookings\";\nexport const history = createBrowserHistory();\n\nfunction rootReducer(history) {\n  return combineReducers({\n    router: connectRouter(history),\n    [sessionDuck.name]: sessionDuck.reducer,\n    [userDuck.name]: userDuck.reducer,\n    [bookingsDuck.name]: bookingsDuck.reducer\n  });\n}\n\nconst devtoolsEnhancer = composeWithDevTools({\n  name: \"Test app\"\n});\nconst storeEnhancer = devtoolsEnhancer(applyMiddleware(routerMiddleware(history), localStorageMiddleware));\nconst preloadedState = JSON.parse(localStorage.getItem(\"state\") || \"{}\");\nexport const stateStore = createStore(rootReducer(history), preloadedState, storeEnhancer);","map":{"version":3,"sources":["/Users/raymondjones/Git/bokning/src/ducks/index.js"],"names":["applyMiddleware","combineReducers","createStore","composeWithDevTools","localStorageMiddleware","sessionDuck","createBrowserHistory","connectRouter","routerMiddleware","userDuck","bookingsDuck","history","rootReducer","router","name","reducer","devtoolsEnhancer","storeEnhancer","preloadedState","JSON","parse","localStorage","getItem","stateStore"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,sBAAP,MAAmC,4BAAnC;AACA,OAAO,KAAKC,WAAZ,MAA6B,WAA7B;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AACA,OAAO,KAAKC,QAAZ,MAA0B,QAA1B;AACA,OAAO,KAAKC,YAAZ,MAA8B,YAA9B;AAEA,OAAO,MAAMC,OAAO,GAAGL,oBAAoB,EAApC;;AACP,SAASM,WAAT,CAAqBD,OAArB,EAA8B;AAC5B,SAAOV,eAAe,CAAC;AACrBY,IAAAA,MAAM,EAAEN,aAAa,CAACI,OAAD,CADA;AAErB,KAACN,WAAW,CAACS,IAAb,GAAoBT,WAAW,CAACU,OAFX;AAGrB,KAACN,QAAQ,CAACK,IAAV,GAAiBL,QAAQ,CAACM,OAHL;AAIrB,KAACL,YAAY,CAACI,IAAd,GAAqBJ,YAAY,CAACK;AAJb,GAAD,CAAtB;AAMD;;AAED,MAAMC,gBAAgB,GAAGb,mBAAmB,CAAC;AAC3CW,EAAAA,IAAI,EAAE;AADqC,CAAD,CAA5C;AAIA,MAAMG,aAAa,GAAGD,gBAAgB,CACpChB,eAAe,CAACQ,gBAAgB,CAACG,OAAD,CAAjB,EAA4BP,sBAA5B,CADqB,CAAtC;AAIA,MAAMc,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAA5C,CAAvB;AAEA,OAAO,MAAMC,UAAU,GAAGrB,WAAW,CACnCU,WAAW,CAACD,OAAD,CADwB,EAEnCO,cAFmC,EAGnCD,aAHmC,CAA9B","sourcesContent":["import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport localStorageMiddleware from \"../middleware/localStorage\";\nimport * as sessionDuck from \"./session\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport * as userDuck from \"./user\";\nimport * as bookingsDuck from \"./bookings\";\n\nexport const history = createBrowserHistory();\nfunction rootReducer(history) {\n  return combineReducers({\n    router: connectRouter(history),\n    [sessionDuck.name]: sessionDuck.reducer,\n    [userDuck.name]: userDuck.reducer,\n    [bookingsDuck.name]: bookingsDuck.reducer,\n  });\n}\n\nconst devtoolsEnhancer = composeWithDevTools({\n  name: \"Test app\",\n});\n\nconst storeEnhancer = devtoolsEnhancer(\n  applyMiddleware(routerMiddleware(history), localStorageMiddleware),\n);\n\nconst preloadedState = JSON.parse(localStorage.getItem(\"state\") || \"{}\");\n\nexport const stateStore = createStore(\n  rootReducer(history),\n  preloadedState,\n  storeEnhancer,\n);\n"]},"metadata":{},"sourceType":"module"}