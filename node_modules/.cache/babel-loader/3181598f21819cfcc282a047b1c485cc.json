{"ast":null,"code":"export const name = \"session\";\nconst initialState = {\n  isLoggedIn: false,\n  username: undefined\n};\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"LOGIN\":\n      return { ...state,\n        isLoggedIn: true,\n        username: action.payload\n      };\n\n    case \"LOGOUT\":\n      return { ...state,\n        isLoggedIn: false,\n        username: undefined\n      };\n\n    default:\n      return state;\n  }\n}\nexport function isLoggedIn(state) {\n  return state[name].isLoggedIn;\n}\nexport function getUsername(state) {\n  return state.session.username;\n}\nexport function loginAction(username) {\n  return {\n    type: \"LOGIN\",\n    payload: username\n  };\n}\nexport function logoutAction() {\n  return {\n    type: \"LOGOUT\"\n  };\n}","map":{"version":3,"sources":["/Users/raymondjones/Git/styledrekond/src/ducks/session.js"],"names":["name","initialState","isLoggedIn","username","undefined","reducer","state","action","type","payload","getUsername","session","loginAction","logoutAction"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAG,SAAb;AAEP,MAAMC,YAAY,GAAG;AAAEC,EAAAA,UAAU,EAAE,KAAd;AAAqBC,EAAAA,QAAQ,EAAEC;AAA/B,CAArB;AAEA,OAAO,SAASC,OAAT,CAAiBC,KAAK,GAAGL,YAAzB,EAAuCM,MAAvC,EAA+C;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELJ,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAHZ,OAAP;;AAKF,SAAK,QAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,QAAQ,EAAEC;AAHL,OAAP;;AAKF;AACE,aAAOE,KAAP;AAdJ;AAgBD;AAED,OAAO,SAASJ,UAAT,CAAoBI,KAApB,EAA2B;AAChC,SAAOA,KAAK,CAACN,IAAD,CAAL,CAAYE,UAAnB;AACD;AACD,OAAO,SAASQ,WAAT,CAAqBJ,KAArB,EAA4B;AACjC,SAAOA,KAAK,CAACK,OAAN,CAAcR,QAArB;AACD;AAED,OAAO,SAASS,WAAT,CAAqBT,QAArB,EAA+B;AACpC,SAAO;AACLK,IAAAA,IAAI,EAAE,OADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID;AAED,OAAO,SAASU,YAAT,GAAwB;AAC7B,SAAO;AACLL,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD","sourcesContent":["export const name = \"session\";\n\nconst initialState = { isLoggedIn: false, username: undefined };\n\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        ...state,\n        isLoggedIn: true,\n        username: action.payload,\n      };\n    case \"LOGOUT\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        username: undefined,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function isLoggedIn(state) {\n  return state[name].isLoggedIn;\n}\nexport function getUsername(state) {\n  return state.session.username;\n}\n\nexport function loginAction(username) {\n  return {\n    type: \"LOGIN\",\n    payload: username,\n  };\n}\n\nexport function logoutAction() {\n  return {\n    type: \"LOGOUT\",\n  };\n}\n"]},"metadata":{},"sourceType":"module"}